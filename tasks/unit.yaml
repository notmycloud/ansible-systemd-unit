---
- name: "Systemd | {{ systemd_user }} | {{ systemd_type.key }} | {{ unit_file_path }} | Check if Unit exists"
  stat:
    path: "{{ unit_file_path }}"
  # become_user: "{{ systemd_user }}"
  register: unit_file_stat

- name: "Systemd | {{ systemd_user }} | {{ systemd_type.key }} | {{ unit_file_path }} | Backup existing unit file"
  ansible.builtin.copy:
    dest: "{{ unit_file_path }}.bak"
    src: "{{ unit_file_path }}"
    remote_src: yes
  # become_user: "{{ systemd_user }}"
  failed_when: no
  when: 
    - unit.options.backup_before_write is not defined or unit.options.backup_before_write is defined and unit.options.backup_before_write
    - unit_file_stat.stat.exists

- name: "Systemd | {{ systemd_user }} | {{ systemd_type.key }} | {{ unit_file_path }} | Create Unit"
  ansible.builtin.template:
    src: unit.j2
    dest: "{{ unit_file_path }}"
    owner: "{{ systemd_user }}"
    group: "{{ systemd_user }}"
    mode: '0644'
    trim_blocks: yes
    lstrip_blocks: yes
    # TODO: Cannot analyze until Debian pushes a Systemd version that supports the alias option
    # Currently shown in Systemd 250 manpages: https://www.freedesktop.org/software/systemd/man/systemd-analyze.html#:~:text=Example%C2%A018.%C2%A0Aliasing%20a%20unit
    # https://manpages.debian.org/testing/systemd/systemd-analyze.1.en.html
    # validate: "systemd-analyze verify %s:alias.{{ systemd_type.key }}"
  # become_user: "{{ systemd_user }}"
  # become_user: root
  # become: true
  register: unit_result

- name: "Systemd | {{ systemd_user }} | {{ systemd_type.key }} | {{ unit_file_path }} | Configure Unit"
  ansible.builtin.systemd:
    name: "{{ systemd_unit.key }}.{{ systemd_type.key }}"
    state: "{% if unit.options.restart_on_change | default('yes') %}restarted{% else %}{{ unit.options.state | default('started') }}{% endif %}"
    enabled: "{{ unit.options.enabled | default('yes') }}"
    daemon_reload: yes
    scope: "{% if systemd_user == 'root' %}system{% else %}user{% endif %}"
  environment:
    # XDG_RUNTIMEDIR: "{{ user_info.uid | default('/run/user/0') }}"
    XDG_RUNTIMEDIR: "{{ user_info.uid | default(omit) }}"
  # become_user: "{{ systemd_user }}"
  when: unit_result.changed
    